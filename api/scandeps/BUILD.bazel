load("@rules_proto//proto:defs.bzl", "proto_library")
load("@com_github_grpc_grpc//bazel:cc_grpc_library.bzl", "cc_grpc_library")
load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")

proto_library(
    name = "cppscandeps_proto",
    srcs = ["cppscandeps.proto"],
    visibility = ["//visibility:public"],
    deps = [
        "@com_google_protobuf//:duration_proto",
        "@com_google_protobuf//:empty_proto",
    ],
)

cc_proto_library(
    name = "cppscandeps_cc_proto",
    deps = [
        ":cppscandeps_proto",
    ],
)

cc_grpc_library(
    name = "cppscandeps_cc",
    srcs = [":cppscandeps_proto"],
    grpc_only = True,
    visibility = ["//visibility:public"],
    deps = [":cppscandeps_cc_proto"],
)

go_proto_library(
    name = "cppscandeps_go_proto",
    compilers = ["@io_bazel_rules_go//proto:go_grpc"],
    importpath = "team/foundry-x/re-client/api/scandeps",
    proto = ":cppscandeps_proto",
    visibility = ["//visibility:public"],
)

go_library(
    name = "cppscandeps",
    embed = [":cppscandeps_go_proto"],
    importpath = "team/foundry-x/re-client/api/cppscandeps",
    visibility = ["//visibility:public"],
)

# This was added by the precommit hook.
# If I change the importpath to cppscandeps it changes it back.
# If I change the sampleclient to use this instead of the above cppscandeps
# it deletes that dependency and the sampleclient cannot be built.
# So this exists because the precommit hook insists it must but it is never used.
go_library(
    name = "scandeps",
    embed = [":cppscandeps_go_proto"],
    importpath = "team/foundry-x/re-client/api/scandeps",
    visibility = ["//visibility:public"],
)
