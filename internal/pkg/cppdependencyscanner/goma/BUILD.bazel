load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

filegroup(
    name = "bridge_cc",
    srcs = ["bridge.cc"],
    visibility = ["//internal/pkg/cppdependencyscanner/gomaservice:__pkg__"],
)

filegroup(
    name = "bridge_h",
    srcs = ["bridge.h"],
    visibility = ["//internal/pkg/cppdependencyscanner/gomaservice:__pkg__"],
)

go_library(
    name = "goma",
    srcs = [
        "bridge.cc",
        "bridge.h",
        "goma.go",
    ],
    cdeps = select({
        "//:goma_input_processor_service_config_windows": [
            "//goma:goma_input_processor",
            "@goma_clang//:absl",
            "@goma_clang//:base",
            "@goma_clang//:chromium_base",
            "@goma_clang//:client",
            "@goma_clang//:glog",
            "@goma_clang//:gtest",
            "@goma_clang//:json",
            "@goma_clang//:lib",
            "@goma_clang//:protobuf",
            "@goma_clang//:root",
            "@goma_clang//:zlib",
        ],
        "//conditions:default": [
            "//goma:goma_input_processor",
            "@goma//:absl",
            "@goma//:base",
            "@goma//:chromium_base",
            "@goma//:client",
            "@goma//:glog",
            "@goma//:gtest",
            "@goma//:json",
            "@goma//:lib",
            "@goma//:protobuf",
            "@goma//:root",
            "@goma//:zlib",
        ],
    }) + select({
        "@io_bazel_rules_go//go/platform:linux": [
            "@goma//:libc",
        ],
        "//conditions:default": [],
    }),
    cgo = True,
    clinkopts = select({
        "@io_bazel_rules_go//go/platform:android": [
            "-static-libstdc++",
            "-Wl,--wrap=glob",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "-static-libstdc++",
            "-Wl,--wrap=glob",
        ],
        "@io_bazel_rules_go//go/platform:windows": [
            "-Wl,-Bstatic,-lstdc++,-lwinpthread,-lssp,-Bdynamic",
            "-lws2_32",
            "-ldbghelp",
            "-lpsapi",
            "-static-libstdc++",
        ],
        "//conditions:default": [],
    }),
    cxxopts = [
        "-D_LIBCPP_ENABLE_NODISCARD -D_LIBCPP_HAS_NO_VENDOR_AVAILABILITY_ANNOTATIONS",
        "-fno-exceptions -Wno-deprecated-declarations",
        "-std=c++14",
    ] + select({
        "@io_bazel_rules_go//go/platform:android": [
            "-nostdinc++",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "-nostdinc++",
        ],
        "//conditions:default": [],
    }),
    importpath = "github.com/bazelbuild/reclient/internal/pkg/cppdependencyscanner/includescanner",  # keep
    tags = [
        "manual",
        "no-remote-exec",
    ],
    target_compatible_with = select({
        "//:goma_input_processor_config": [],
        "//conditions:default": ["@platforms//:incompatible"],
    }),
    visibility = ["//:__subpackages__"],
    deps = [
        "//internal/pkg/logger",
        "@com_github_bazelbuild_remote_apis_sdks//go/pkg/filemetadata",
        "@com_github_golang_glog//:go_default_library",
    ],
)

go_test(
    name = "goma_test",
    srcs = ["goma_test.go"],
    embed = [":goma"],
    deps = [
        "//internal/pkg/logger",
        "//internal/pkg/stats",
        "@com_github_google_go_cmp//cmp",
    ],
)
